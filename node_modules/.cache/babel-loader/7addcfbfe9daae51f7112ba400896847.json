{"ast":null,"code":"// import React, { useEffect, useState } from \"react\";\n// import { Link, useParams, useHistory } from \"react-router-dom\";\n// import { deleteDeck, readDeck, deleteCard, listCards } from \"../utils/api/index\";\n// export default function Deck({ decks, setDecks }) {\n//     const { deckId } = useParams();\n//     const [ cards, setCards ] = useState([]);\n//     const history = useHistory();\n//     useEffect(() => {\n//         async function loadDeck() {\n//             try {\n//                 const responseFromAPI = await readDeck(deckId);\n//                 setDecks(responseFromAPI);\n//                 setCards(responseFromAPI.cards)\n//             }catch (error){\n//                 console.log(\"Aborted Deck\")\n//             }\n//         }\n//         loadDeck();\n//     }, [deckId])\n//     const handleDeckDelete = async () => {\n//         const result = window.confirm(`Delete this deck? \\n \\nYou will not be able to recover it.`);\n//         if(result) {\n//             async function deleteThisDeck() {\n//                 try {\n//                     await deleteDeck(deckId);\n//                     history.push(\"/\");\n//                 }catch (error){\n//                     console.log(\"Aborted Deck Delete\")\n//                 }\n//             }\n//         deleteThisDeck();\n//         }\n//     };\n//     const handleCardDelete = async ({ target }) => {\n//         const value = target.value;\n//         const result = window.confirm(`Delete this ${value} card? \\n \\nYou will not be able to recover it.`);\n//         if(result) {\n//             async function deleteThisCard() {\n//                 try {\n//                     await deleteCard(value);\n//                     const valueFromAPI = await listCards(deckId);\n//                     setCards(valueFromAPI)\n//                 }catch (error){\n//                     console.log(\"Aborted Card Delete\")\n//                 }\n//             }\n//         deleteThisCard();\n//         }\n//     };\n//     if(cards.length > 0){\n//     return (\n//         <div>\n//             <nav aria-label=\"breadcrumb\">\n//                 <ol className=\"breadcrumb\">\n//                     <li className=\"breadcrumb-item\">\n//                         <Link to={\"/\"} className=\"btn btn-link\">Go Home</Link>\n//                     </li>\n//                     <li className=\"breadcrumb-item active\" aria-current=\"page\">\n//                         {decks.name}\n//                     </li>\n//                 </ol>\n//             </nav>\n//             <div className=\"card\">\n//             <div className=\"col\">\n//                 <div className=\"row justify-content-between\">\n//                     <h2>{decks.name}</h2>\n//                 </div>\n//                 <div>\n//                     <p>{decks.description}</p>\n//                 </div>\n//                 <div className=\"container\">\n//                     <div className=\"row\">\n//                         <div className=\"col\">\n//                             <Link to={`/decks/${decks.id}/edit`} className=\"btn btn-secondary\">Edit</Link>\n//                             <Link to={`/decks/${decks.id}/study`} className=\"btn btn-primary\">Study</Link>\n//                             <Link to={`/decks/${decks.id}/cards/new`} className=\"btn btn-primary\">Add Cards</Link>\n//                         </div>\n//                         <div className=\"col\" style={{textAlign: \"right\"}}>\n//                         <button className=\"btn btn-danger\" onClick={handleDeckDelete}>Delete</button>\n//                         </div>\n//                     </div>\n//                 </div>\n//             </div>\n//         </div>\n//         <h2>Cards</h2>\n//         <br/>\n//         {cards.map((card) => (\n//             <div>\n//                 <div>{card.front}</div>\n//                 <div>{card.back}</div>\n//             </div>\n//         ))}\n//     </div>\n//     );\n//     }else{\n//         return (\n//         <h2>Please Add Cards to the Deck.</h2>\n//         )\n//     }\n// }","map":{"version":3,"sources":["/Users/mattairola/Project_Flashcards_Qualified_1/src/Layout/Deck.js"],"names":[],"mappingssourcesContent":["// import React, { useEffect, useState } from \"react\";\n// import { Link, useParams, useHistory } from \"react-router-dom\";\n// import { deleteDeck, readDeck, deleteCard, listCards } from \"../utils/api/index\";\n\n// export default function Deck({ decks, setDecks }) {\n//     const { deckId } = useParams();\n//     const [ cards, setCards ] = useState([]);\n//     const history = useHistory();\n\n//     useEffect(() => {\n//         async function loadDeck() {\n//             try {\n//                 const responseFromAPI = await readDeck(deckId);\n//                 setDecks(responseFromAPI);\n//                 setCards(responseFromAPI.cards)\n//             }catch (error){\n//                 console.log(\"Aborted Deck\")\n//             }\n//         }\n//         loadDeck();\n//     }, [deckId])\n    \n//     const handleDeckDelete = async () => {\n\n//         const result = window.confirm(`Delete this deck? \\n \\nYou will not be able to recover it.`);\n//         if(result) {\n//             async function deleteThisDeck() {\n//                 try {\n//                     await deleteDeck(deckId);\n//                     history.push(\"/\");\n//                 }catch (error){\n//                     console.log(\"Aborted Deck Delete\")\n//                 }\n//             }\n//         deleteThisDeck();\n//         }\n//     };\n\n//     const handleCardDelete = async ({ target }) => {\n//         const value = target.value;\n\n//         const result = window.confirm(`Delete this ${value} card? \\n \\nYou will not be able to recover it.`);\n//         if(result) {\n//             async function deleteThisCard() {\n//                 try {\n//                     await deleteCard(value);\n//                     const valueFromAPI = await listCards(deckId);\n//                     setCards(valueFromAPI)\n//                 }catch (error){\n//                     console.log(\"Aborted Card Delete\")\n//                 }\n//             }\n//         deleteThisCard();\n//         }\n//     };\n    \n//     if(cards.length > 0){\n//     return (\n//         <div>\n//             <nav aria-label=\"breadcrumb\">\n//                 <ol className=\"breadcrumb\">\n//                     <li className=\"breadcrumb-item\">\n//                         <Link to={\"/\"} className=\"btn btn-link\">Go Home</Link>\n//                     </li>\n//                     <li className=\"breadcrumb-item active\" aria-current=\"page\">\n//                         {decks.name}\n//                     </li>\n//                 </ol>\n//             </nav>\n//             <div className=\"card\">\n//             <div className=\"col\">\n//                 <div className=\"row justify-content-between\">\n//                     <h2>{decks.name}</h2>\n//                 </div>\n//                 <div>\n//                     <p>{decks.description}</p>\n//                 </div>\n//                 <div className=\"container\">\n//                     <div className=\"row\">\n//                         <div className=\"col\">\n//                             <Link to={`/decks/${decks.id}/edit`} className=\"btn btn-secondary\">Edit</Link>\n//                             <Link to={`/decks/${decks.id}/study`} className=\"btn btn-primary\">Study</Link>\n//                             <Link to={`/decks/${decks.id}/cards/new`} className=\"btn btn-primary\">Add Cards</Link>\n//                         </div>\n//                         <div className=\"col\" style={{textAlign: \"right\"}}>\n//                         <button className=\"btn btn-danger\" onClick={handleDeckDelete}>Delete</button>\n//                         </div>\n//                     </div>\n//                 </div>\n//             </div>\n//         </div>\n//         <h2>Cards</h2>\n//         <br/>\n//         {cards.map((card) => (\n//             <div>\n//                 <div>{card.front}</div>\n//                 <div>{card.back}</div>\n//             </div>\n//         ))}\n//     </div>\n//     );\n//     }else{\n//         return (\n//         <h2>Please Add Cards to the Deck.</h2>\n//         )\n//     }\n// }"]},"metadata":{},"sourceType":"module"}