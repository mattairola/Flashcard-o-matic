{"ast":null,"code":"var _jsxFileName = \"/Users/mattairola/Project_Flashcards_Qualified_1/src/Deck/ViewDeck.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { Link, useParams, useHistory, useRouteMatch } from \"react-router-dom\";\nimport { readDeck, deleteDeck, deleteCard } from \"../utils/api/index\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ViewDeck = () => {\n  _s();\n\n  const {\n    url\n  } = useRouteMatch();\n  const {\n    deckId\n  } = useParams();\n  const history = useHistory();\n  const [deck, setDeck] = useState({\n    id: 0,\n    name: \"\",\n    cards: []\n  });\n  useEffect(() => {\n    async function loadDecks() {\n      const result = await readDeck(deckId);\n      setDeck(result);\n    }\n\n    loadDecks();\n  }, [deckId]);\n\n  const deleteDeckHandler = deckId => {\n    if (window.confirm(`Delete this deck? \\n \\nYou will not be able to recover it.`)) {\n      deleteDeck(deckId);\n      history.push(\"/\");\n      history.go(0);\n    }\n  };\n\n  const deleteCardHandler = cardId => {\n    if (window.confirm(`Delete this card? \\n \\nYou will not be able to recover it.`)) {\n      deleteCard(cardId).then(history.go(0));\n    }\n  };\n\n  const returnedCardList = deck.cards.map((card, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"li\", {\n      className: \"list-group-item\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"d-flex justify-content-between row\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: [\"Question: \", card.front]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [\"Answer: \", card.back]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(Link, {\n          to: `/decks/${deck.id}/cards/${card.id}/edit`,\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            className: \"btn btn-secondary\",\n            children: \"Edit Card\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          onClick: () => deleteCardHandler(card.id),\n          className: \"btn btn-danger\",\n          children: \"Delete Card\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 11\n    }, this)\n  }, index, false, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 9\n  }, this));\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"nav\", {\n      \"aria-label\": \"breadcrumb\",\n      children: /*#__PURE__*/_jsxDEV(\"ol\", {\n        className: \"breadcrumb\",\n        children: [/*#__PURE__*/_jsxDEV(\"li\", {\n          class: \"breadcrumb-item\",\n          children: /*#__PURE__*/_jsxDEV(Link, {\n            to: \"/\",\n            children: \"Home\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          className: \"breadcrumb-item active\",\n          \"aria-current\": \"page\",\n          children: deck.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n      children: deck.name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: deck.description\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"col\",\n      children: [/*#__PURE__*/_jsxDEV(Link, {\n        to: `${url}/edit`,\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          className: \"btn btn-info\",\n          children: \"Edit Deck\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Link, {\n        to: `${url}/study`,\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          className: \"btn btn-info\",\n          children: \"Study\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Link, {\n        to: `${url}/cards/new`,\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          className: \"btn btn-info\",\n          children: \"Add Card\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: () => deleteDeckHandler(deck.id),\n        className: \"btn btn-danger\",\n        children: \"Delete Deck\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n      children: \"Cards\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: returnedCardList\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 11\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 9\n  }, this);\n};\n\n_s(ViewDeck, \"Ijpij3U/4r6v+lGAOri0SRCnO4Y=\", false, function () {\n  return [useRouteMatch, useParams, useHistory];\n});\n\n_c = ViewDeck;\nexport default ViewDeck;\n\nvar _c;\n\n$RefreshReg$(_c, \"ViewDeck\");","map":{"version":3,"sources":["/Users/mattairola/Project_Flashcards_Qualified_1/src/Deck/ViewDeck.js"],"names":["React","useState","useEffect","Link","useParams","useHistory","useRouteMatch","readDeck","deleteDeck","deleteCard","ViewDeck","url","deckId","history","deck","setDeck","id","name","cards","loadDecks","result","deleteDeckHandler","window","confirm","push","go","deleteCardHandler","cardId","then","returnedCardList","map","card","index","front","back","description"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,IAAT,EAAeC,SAAf,EAA0BC,UAA1B,EAAsCC,aAAtC,QAA2D,kBAA3D;AACA,SAASC,QAAT,EAAmBC,UAAnB,EAA+BC,UAA/B,QAAiD,oBAAjD;;;AAEA,MAAMC,QAAQ,GAAG,MAAM;AAAA;;AACnB,QAAM;AAAEC,IAAAA;AAAF,MAAUL,aAAa,EAA7B;AACA,QAAM;AAAEM,IAAAA;AAAF,MAAaR,SAAS,EAA5B;AACA,QAAMS,OAAO,GAAGR,UAAU,EAA1B;AACA,QAAM,CAAES,IAAF,EAAQC,OAAR,IAAoBd,QAAQ,CAAC;AAC/Be,IAAAA,EAAE,EAAE,CAD2B;AAE/BC,IAAAA,IAAI,EAAE,EAFyB;AAG/BC,IAAAA,KAAK,EAAE;AAHwB,GAAD,CAAlC;AAMAhB,EAAAA,SAAS,CAAC,MAAM;AACZ,mBAAeiB,SAAf,GAA2B;AACvB,YAAMC,MAAM,GAAG,MAAMb,QAAQ,CAACK,MAAD,CAA7B;AACAG,MAAAA,OAAO,CAACK,MAAD,CAAP;AACH;;AACDD,IAAAA,SAAS;AACZ,GANQ,EAMN,CAACP,MAAD,CANM,CAAT;;AAQA,QAAMS,iBAAiB,GAAIT,MAAD,IAAY;AAClC,QAAGU,MAAM,CAACC,OAAP,CAAgB,4DAAhB,CAAH,EAAgF;AAC5Ef,MAAAA,UAAU,CAACI,MAAD,CAAV;AACAC,MAAAA,OAAO,CAACW,IAAR,CAAa,GAAb;AACAX,MAAAA,OAAO,CAACY,EAAR,CAAW,CAAX;AACH;AACJ,GAND;;AAQA,QAAMC,iBAAiB,GAAIC,MAAD,IAAY;AAClC,QAAGL,MAAM,CAACC,OAAP,CAAgB,4DAAhB,CAAH,EAAgF;AAC5Ed,MAAAA,UAAU,CAACkB,MAAD,CAAV,CAAmBC,IAAnB,CAAwBf,OAAO,CAACY,EAAR,CAAW,CAAX,CAAxB;AACH;AACF,GAJH;;AAMA,QAAMI,gBAAgB,GAAGf,IAAI,CAACI,KAAL,CAAWY,GAAX,CAAe,CAACC,IAAD,EAAOC,KAAP,kBACpC;AAAA,2BACE;AAAI,MAAA,SAAS,EAAC,iBAAd;AAAA,8BACE;AAAK,QAAA,SAAS,EAAC,oCAAf;AAAA,+BACE;AAAK,UAAA,SAAS,EAAC,KAAf;AAAA,kCACE;AAAA,qCACaD,IAAI,CAACE,KADlB;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eAIE;AAAA,mCACWF,IAAI,CAACG,IADhB;AAAA;AAAA;AAAA;AAAA;AAAA,kBAJF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cADF,eAWE;AAAA,gCACE,QAAC,IAAD;AAAM,UAAA,EAAE,EAAG,UAASpB,IAAI,CAACE,EAAG,UAASe,IAAI,CAACf,EAAG,OAA7C;AAAA,iCACE;AAAQ,YAAA,IAAI,EAAC,QAAb;AAAsB,YAAA,SAAS,EAAC,mBAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBADF,eAII;AACI,UAAA,IAAI,EAAC,QADT;AAEI,UAAA,OAAO,EAAE,MAAMU,iBAAiB,CAACK,IAAI,CAACf,EAAN,CAFpC;AAGI,UAAA,SAAS,EAAC,gBAHd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAJJ;AAAA;AAAA;AAAA;AAAA;AAAA,cAXF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF,KAAUgB,KAAV;AAAA;AAAA;AAAA;AAAA,UADqB,CAAzB;AA6BA,sBACI;AAAA,4BACI;AAAK,oBAAW,YAAhB;AAAA,6BACI;AAAI,QAAA,SAAS,EAAC,YAAd;AAAA,gCACI;AAAI,UAAA,KAAK,EAAC,iBAAV;AAAA,iCACI,QAAC,IAAD;AAAM,YAAA,EAAE,EAAC,GAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,gBADJ,eAMI;AAAI,UAAA,SAAS,EAAC,wBAAd;AAAuC,0BAAa,MAApD;AAAA,oBACKlB,IAAI,CAACG;AADV;AAAA;AAAA;AAAA;AAAA,gBANJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YADJ,eAaA;AAAA,gBAAKH,IAAI,CAACG;AAAV;AAAA;AAAA;AAAA;AAAA,YAbA,eAcA;AAAA,gBAAIH,IAAI,CAACqB;AAAT;AAAA;AAAA;AAAA;AAAA,YAdA,eAeI;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA,8BACI,QAAC,IAAD;AAAM,QAAA,EAAE,EAAG,GAAExB,GAAI,OAAjB;AAAA,+BACI;AAAQ,UAAA,IAAI,EAAC,QAAb;AAAsB,UAAA,SAAS,EAAC,cAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cADJ,eAMI,QAAC,IAAD;AAAM,QAAA,EAAE,EAAG,GAAEA,GAAI,QAAjB;AAAA,+BACI;AAAQ,UAAA,IAAI,EAAC,QAAb;AAAsB,UAAA,SAAS,EAAC,cAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cANJ,eAWI,QAAC,IAAD;AAAM,QAAA,EAAE,EAAG,GAAEA,GAAI,YAAjB;AAAA,+BACI;AAAQ,UAAA,IAAI,EAAC,QAAb;AAAsB,UAAA,SAAS,EAAC,cAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cAXJ,eAgBQ;AACI,QAAA,IAAI,EAAC,QADT;AAEI,QAAA,OAAO,EAAE,MAAMU,iBAAiB,CAACP,IAAI,CAACE,EAAN,CAFpC;AAGI,QAAA,SAAS,EAAC,gBAHd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAhBR;AAAA;AAAA;AAAA;AAAA;AAAA,YAfJ,eAuCE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAvCF,eAwCE;AAAA,gBAAMa;AAAN;AAAA;AAAA;AAAA;AAAA,YAxCF;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AA4CH,CAzGD;;GAAMnB,Q;UACcJ,a,EACGF,S,EACHC,U;;;KAHdK,Q;AA2GN,eAAeA,QAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { Link, useParams, useHistory, useRouteMatch } from \"react-router-dom\";\nimport { readDeck, deleteDeck, deleteCard } from \"../utils/api/index\"\n \nconst ViewDeck = () => {\n    const { url } = useRouteMatch();\n    const { deckId } = useParams();\n    const history = useHistory();\n    const [ deck, setDeck ] = useState({\n        id: 0,\n        name: \"\",\n        cards: []\n    });\n\n    useEffect(() => {\n        async function loadDecks() {\n            const result = await readDeck(deckId);\n            setDeck(result);\n        }\n        loadDecks();\n    }, [deckId]);\n\n    const deleteDeckHandler = (deckId) => {\n        if(window.confirm(`Delete this deck? \\n \\nYou will not be able to recover it.`)){\n            deleteDeck(deckId);\n            history.push(\"/\");\n            history.go(0);\n        }\n    };\n\n    const deleteCardHandler = (cardId) => {\n        if(window.confirm(`Delete this card? \\n \\nYou will not be able to recover it.`)){\n            deleteCard(cardId).then(history.go(0));\n        }\n      };\n\n    const returnedCardList = deck.cards.map((card, index) => (\n        <div key={index}>\n          <li className=\"list-group-item\">\n            <div className=\"d-flex justify-content-between row\">\n              <div className=\"col\">\n                <div>\n                  Question: {card.front}\n                </div>\n                <div>\n                  Answer: {card.back}\n                </div>\n              </div>\n            </div>\n            <div>\n              <Link to={`/decks/${deck.id}/cards/${card.id}/edit`}>\n                <button type=\"button\" className=\"btn btn-secondary\">Edit Card</button>\n              </Link>\n                <button\n                    type=\"button\"\n                    onClick={() => deleteCardHandler(card.id)}\n                    className=\"btn btn-danger\"\n                >\n                Delete Card\n                </button>\n            </div>\n          </li>\n        </div>\n    ))\n\n    return (\n        <div>\n            <nav aria-label=\"breadcrumb\">\n                <ol className=\"breadcrumb\">\n                    <li class=\"breadcrumb-item\">\n                        <Link to=\"/\">\n                            Home\n                        </Link>\n                    </li>\n                    <li className=\"breadcrumb-item active\" aria-current=\"page\">\n                        {deck.name}\n                    </li>\n                </ol>\n            </nav>\n        <h4>{deck.name}</h4>\n        <p>{deck.description}</p>\n            <div className=\"col\">\n                <Link to={`${url}/edit`}>\n                    <button type=\"button\" className=\"btn btn-info\">\n                        Edit Deck\n                    </button>\n                </Link>\n                <Link to={`${url}/study`}>\n                    <button type=\"button\" className=\"btn btn-info\">\n                        Study\n                    </button>\n                </Link>\n                <Link to={`${url}/cards/new`}>\n                    <button type=\"button\" className=\"btn btn-info\">\n                        Add Card\n                    </button>\n                </Link>\n                    <button\n                        type=\"button\"\n                        onClick={() => deleteDeckHandler(deck.id)}\n                        className=\"btn btn-danger\"\n                    >\n                        Delete Deck\n                    </button>\n            </div>       \n          <h4>Cards</h4>\n          <div>{returnedCardList}</div>\n        </div>\n    )\n}\n\nexport default ViewDeck;"]},"metadata":{},"sourceType":"module"}