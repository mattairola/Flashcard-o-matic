{"ast":null,"code":"var _jsxFileName = \"/Users/mattairola/Project_Flashcards_Qualified_1/src/Deck/Deck.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { deleteDeck, readDeck, deleteCard, listCards } from \"../utils/api/index\";\nimport Study from \"./Study\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Deck = ({\n  decks,\n  setDecks\n}) => {\n  _s();\n\n  // const { deckId } = useParams();\n  const [cards, setCards] = useState([]); // const history = useHistory();\n  // useEffect(() => {\n  //     async function loadDeck() {\n  //         try {\n  //             const responseFromAPI = await readDeck(deckId);\n  //             setDecks(responseFromAPI);\n  //             setCards(responseFromAPI.cards)\n  //         }catch (error){\n  //             console.log(\"Aborted Deck\")\n  //         }\n  //     }\n  //     loadDeck();\n  // }, [deckId])\n\n  const handleDeckDelete = async () => {\n    const result = window.confirm(`Delete this deck? \\n \\nYou will not be able to recover it.`);\n\n    if (result) {\n      async function deleteThisDeck() {\n        try {\n          await deleteDeck(deckId);\n          history.push(\"/\");\n        } catch (error) {\n          console.log(\"Aborted Deck Delete\");\n        }\n      }\n\n      deleteThisDeck();\n    }\n  }; // const handleCardDelete = async ({ target }) => {\n  //     const value = target.value;\n  //     const result = window.confirm(`Delete this ${value} card? \\n \\nYou will not be able to recover it.`);\n  //     if(result) {\n  //         async function deleteThisCard() {\n  //             try {\n  //                 await deleteCard(value);\n  //                 const valueFromAPI = await listCards(deckId);\n  //                 setCards(valueFromAPI)\n  //             }catch (error){\n  //                 console.log(\"Aborted Card Delete\")\n  //             }\n  //         }\n  //     deleteThisCard();\n  //     }\n  // };\n\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"nav\", {\n      \"aria-label\": \"breadcrumb\",\n      children: /*#__PURE__*/_jsxDEV(\"ol\", {\n        className: \"breadcrumb\",\n        children: [/*#__PURE__*/_jsxDEV(\"li\", {\n          className: \"breadcrumb-item\",\n          children: /*#__PURE__*/_jsxDEV(Link, {\n            to: \"/\",\n            className: \"btn btn-link\",\n            children: \"Go Home\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          className: \"breadcrumb-item active\",\n          \"aria-current\": \"page\",\n          children: decks.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"row justify-content-between\",\n          children: /*#__PURE__*/_jsxDEV(\"h2\", {\n            children: decks.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            children: decks.description\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"container\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"row\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"col\",\n              children: [/*#__PURE__*/_jsxDEV(Link, {\n                to: `/decks/${decks.id}/edit`,\n                className: \"btn btn-secondary\",\n                children: \"Edit\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 83,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(Link, {\n                to: `/decks/${decks.id}/study`,\n                className: \"btn btn-primary\",\n                children: \"Study\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 84,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(Link, {\n                to: `/decks/${decks.id}/cards/new`,\n                className: \"btn btn-primary\",\n                children: \"Add Cards\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 85,\n                columnNumber: 29\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 82,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"col\",\n              style: {\n                textAlign: \"right\"\n              },\n              children: /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"btn btn-danger\",\n                onClick: handleDeckDelete,\n                children: \"Delete\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 88,\n                columnNumber: 25\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 87,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Cards\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 9\n    }, this), cards.map(card => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: card.front\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: card.back\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 13\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Deck, \"67pvvT688WB8uEFH+ZF86FAWP50=\");\n\n_c = Deck;\nexport default Deck;\n\nvar _c;\n\n$RefreshReg$(_c, \"Deck\");","map":{"version":3,"sources":["/Users/mattairola/Project_Flashcards_Qualified_1/src/Deck/Deck.js"],"names":["React","Link","deleteDeck","readDeck","deleteCard","listCards","Study","Deck","decks","setDecks","cards","setCards","useState","handleDeckDelete","result","window","confirm","deleteThisDeck","deckId","history","push","error","console","log","name","description","id","textAlign","map","card","front","back"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nimport { deleteDeck, readDeck, deleteCard, listCards } from \"../utils/api/index\";\nimport Study from \"./Study\";\n\nconst Deck = ({ decks, setDecks }) => {\n    // const { deckId } = useParams();\n    const [ cards, setCards ] = useState([]);\n    // const history = useHistory();\n\n    // useEffect(() => {\n    //     async function loadDeck() {\n    //         try {\n    //             const responseFromAPI = await readDeck(deckId);\n    //             setDecks(responseFromAPI);\n    //             setCards(responseFromAPI.cards)\n    //         }catch (error){\n    //             console.log(\"Aborted Deck\")\n    //         }\n    //     }\n    //     loadDeck();\n    // }, [deckId])\n    \n    const handleDeckDelete = async () => {\n\n        const result = window.confirm(`Delete this deck? \\n \\nYou will not be able to recover it.`);\n        if(result) {\n            async function deleteThisDeck() {\n                try {\n                    await deleteDeck(deckId);\n                    history.push(\"/\");\n                }catch (error){\n                    console.log(\"Aborted Deck Delete\")\n                }\n            }\n        deleteThisDeck();\n        }\n    };\n\n    // const handleCardDelete = async ({ target }) => {\n    //     const value = target.value;\n\n    //     const result = window.confirm(`Delete this ${value} card? \\n \\nYou will not be able to recover it.`);\n    //     if(result) {\n    //         async function deleteThisCard() {\n    //             try {\n    //                 await deleteCard(value);\n    //                 const valueFromAPI = await listCards(deckId);\n    //                 setCards(valueFromAPI)\n    //             }catch (error){\n    //                 console.log(\"Aborted Card Delete\")\n    //             }\n    //         }\n    //     deleteThisCard();\n    //     }\n    // };\n    \n\n    return (\n        <div>\n            <nav aria-label=\"breadcrumb\">\n                <ol className=\"breadcrumb\">\n                    <li className=\"breadcrumb-item\">\n                        <Link to={\"/\"} className=\"btn btn-link\">Go Home</Link>\n                    </li>\n                    <li className=\"breadcrumb-item active\" aria-current=\"page\">\n                        {decks.name}\n                    </li>\n                </ol>\n            </nav>\n            <div className=\"card\">\n            <div className=\"col\">\n                <div className=\"row justify-content-between\">\n                    <h2>{decks.name}</h2>\n                </div>\n                <div>\n                    <p>{decks.description}</p>\n                </div>\n                <div className=\"container\">\n                    <div className=\"row\">\n                        <div className=\"col\">\n                            <Link to={`/decks/${decks.id}/edit`} className=\"btn btn-secondary\">Edit</Link>\n                            <Link to={`/decks/${decks.id}/study`} className=\"btn btn-primary\">Study</Link>\n                            <Link to={`/decks/${decks.id}/cards/new`} className=\"btn btn-primary\">Add Cards</Link>\n                        </div>\n                        <div className=\"col\" style={{textAlign: \"right\"}}>\n                        <button className=\"btn btn-danger\" onClick={handleDeckDelete}>Delete</button>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n        <h2>Cards</h2>\n        <br/>\n        {cards.map((card) => (\n            <div>\n                <div>{card.front}</div>\n                <div>{card.back}</div>\n            </div>\n        ))}\n    </div>\n    );\n}\n\nexport default Deck;"]},"metadata":{},"sourceType":"module"}