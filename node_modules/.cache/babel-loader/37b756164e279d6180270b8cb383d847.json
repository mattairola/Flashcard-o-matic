{"ast":null,"code":"var _jsxFileName = \"/Users/mattairola/Project_Flashcards_Qualified_1/src/Layout/DeckEdit.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { Link, useParams, useHistory } from \"react-router-dom\";\nimport { readDeck, updateDeck } from \"../utils/api\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function DeckEdit({\n  setDecks\n}) {\n  _s();\n\n  const {\n    deckId\n  } = useParams();\n  const history = useHistory();\n  const [deck, setDeck] = useState({\n    id: 0,\n    name: \"\",\n    description: \"\"\n  });\n  useEffect(() => {\n    async function loadDecks() {\n      try {\n        const result = await readDeck(deckId);\n        setDeck(result);\n      } catch (error) {\n        console.log(\"Aborted Edit Deck\");\n      }\n    }\n\n    loadDecks();\n  }, [deckId]);\n\n  function changeName(event) {\n    setDeck({ ...deck,\n      name: event.target.value\n    });\n  }\n\n  function changeDescription(event) {\n    setDeck({ ...deck,\n      description: event.target.value\n    });\n  }\n\n  function handleSubmit(event) {\n    event.preventDefault();\n    updateDeck(deck).then(result => history.push(`/decks/${result.id}`));\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"nav\", {\n      \"aria-label\": \"breadcrumb\",\n      children: /*#__PURE__*/_jsxDEV(\"ol\", {\n        className: \"breadcrumb\",\n        children: [/*#__PURE__*/_jsxDEV(\"li\", {\n          className: \"breadcrumb-item\",\n          children: /*#__PURE__*/_jsxDEV(Link, {\n            to: \"/\",\n            className: \"btn btn-link\",\n            children: \"Go Home\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          className: \"breadcrumb-item active\",\n          \"aria-current\": \"page\",\n          children: \"Edit Deck\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"deckName\",\n          children: [\"Name\", /*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"col\",\n            type: \"text\",\n            id: \"deckName\",\n            name: \"name\",\n            placeholder: \"Deck Name\",\n            value: deck.name,\n            onChange: changeName\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"description\",\n          children: [\"Description\", /*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"col\",\n            type: \"text\",\n            id: \"description\",\n            name: \"description\",\n            placeholder: \"Brief Description of the Deck\",\n            value: deck.description,\n            onChange: changeDescription\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 9\n  }, this);\n}\n\n_s(DeckEdit, \"wY1apt+s/F0AeGSS1MrTDBp11x8=\", false, function () {\n  return [useParams, useHistory];\n});\n\n_c = DeckEdit;\n\nvar _c;\n\n$RefreshReg$(_c, \"DeckEdit\");","map":{"version":3,"sources":["/Users/mattairola/Project_Flashcards_Qualified_1/src/Layout/DeckEdit.js"],"names":["React","useEffect","useState","Link","useParams","useHistory","readDeck","updateDeck","DeckEdit","setDecks","deckId","history","deck","setDeck","id","name","description","loadDecks","result","error","console","log","changeName","event","target","value","changeDescription","handleSubmit","preventDefault","then","push"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { Link, useParams, useHistory } from \"react-router-dom\";\nimport { readDeck, updateDeck } from \"../utils/api\"\n\nexport default function DeckEdit({ setDecks }) {\n    const { deckId } = useParams();\n    const history = useHistory();\n    const [ deck, setDeck ] = useState({\n        id: 0,\n        name: \"\",\n        description: \"\",\n    });\n\n    useEffect(() => {\n        async function loadDecks() {\n            try {\n                const result = await readDeck(deckId);\n                setDeck(result);\n            }catch (error){\n                console.log(\"Aborted Edit Deck\")\n            }\n        }\n        loadDecks();\n    }, [deckId]);\n\n    function changeName(event) {\n        setDeck({...deck, name: event.target.value});\n    }\n\n    function changeDescription(event) {\n        setDeck({...deck, description: event.target.value})\n    }\n\n    function handleSubmit(event) {\n        event.preventDefault();\n        updateDeck(deck).then((result) => history.push(`/decks/${result.id}`));\n    }\n\n    return (\n        <div>\n            <nav aria-label=\"breadcrumb\">\n                <ol className=\"breadcrumb\">\n                    <li className=\"breadcrumb-item\">\n                        <Link to={\"/\"} className=\"btn btn-link\">Go Home</Link>\n                    </li>\n                    <li className=\"breadcrumb-item active\" aria-current=\"page\">\n                        Edit Deck\n                    </li>\n                </ol>\n            </nav>\n        <form onSubmit={handleSubmit}>\n            <div>\n                <label htmlFor=\"deckName\">\n                    Name\n                    <input \n                        className=\"col\" \n                        type=\"text\" \n                        id=\"deckName\" \n                        name=\"name\" \n                        placeholder=\"Deck Name\"  \n                        value={deck.name}\n                        onChange={changeName}\n                    />\n                </label>\n            </div>\n            <br />\n            <br />\n            <div>\n                <label htmlFor=\"description\">\n                    Description\n                    <input \n                        className=\"col\" \n                        type=\"text\" \n                        id=\"description\" \n                        name=\"description\" \n                        placeholder=\"Brief Description of the Deck\"\n                        value={deck.description}\n                        onChange={changeDescription}\n                    />\n                </label>\n            </div>\n            </form>\n        </div>\n    )\n}"]},"metadata":{},"sourceType":"module"}