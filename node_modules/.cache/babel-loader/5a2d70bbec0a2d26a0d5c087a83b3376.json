{"ast":null,"code":"var _jsxFileName = \"/Users/mattairola/Project_Flashcards_Qualified_1/src/Deck/Study.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { readDeck } from \"../utils/api\";\nimport { Link, useParams, useHistory } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Study = ({\n  decks\n}) => {\n  _s();\n\n  const {\n    deckId\n  } = useParams();\n  const history = useHistory();\n  const [studyDeck, setStudyDeck] = useState({});\n  const [studyCard, setStudyCard] = useState({\n    cards: [],\n    currentCard: 0,\n    cardMax: 0,\n    front: true,\n    flip: false\n  });\n  useEffect(() => {\n    async function loadStudyDeck() {\n      const result = await readDeck(deckId);\n      setStudyDeck(result);\n      setStudyCard({\n        cards: result.cards,\n        currentCard: 0,\n        cardMax: result.cards.length,\n        front: true,\n        flip: false\n      });\n    }\n\n    loadStudyDeck();\n  }, [deckId]);\n\n  const handleFlip = () => {\n    setStudyCard({ ...studyCard,\n      front: !studyCard.front,\n      flip: true\n    });\n  };\n\n  console.log(studyDeck.front);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"nav\", {\n      \"aria-label\": \"breadcrumb\",\n      children: /*#__PURE__*/_jsxDEV(\"ol\", {\n        className: \"breadcrumb\",\n        children: [/*#__PURE__*/_jsxDEV(\"li\", {\n          className: \"breadcrumb-item\",\n          children: /*#__PURE__*/_jsxDEV(Link, {\n            to: \"/\",\n            className: \"btn btn-link\",\n            children: \"Go Home\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          className: \"breadcrumb-item\",\n          children: /*#__PURE__*/_jsxDEV(Link, {\n            to: `/decks/${deckId}`,\n            className: \"btn btn-link\",\n            children: studyDeck.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          className: \"breadcrumb-item active\",\n          \"aria-current\": \"page\",\n          children: \"Study\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n      children: [\"Study: \", studyDeck.name]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card-body\",\n        children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n          children: `Card ${studyCard.currentCard + 1} of ${studyCard.cardMax}`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"card-text\",\n          children: studyCard.front ? studyCard.cards[studyCard.currentCard].front : studyCard.cards[studyCard.currentCard].back\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn btn-primary\",\n          onClick: handleFlip,\n          children: \"Flip\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn btn-secondary\",\n          children: \"Next\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Study, \"y8O67zcgOuSfG7uoCpHa/abFbvo=\", false, function () {\n  return [useParams, useHistory];\n});\n\n_c = Study;\nexport default Study; // const handleDeckDelete = async () => {\n//     const result = window.confirm(`Delete this deck? \\n \\nYou will not be able to recover it.`);\n//     if(result) {\n//         async function deleteThisDeck() {\n//             try {\n//                 await deleteDeck(deckId);\n//                 history.push(\"/\");\n//             }catch (error){\n//                 console.log(\"Aborted Deck Delete\")\n//             }\n//         }\n//     deleteThisDeck();\n//     }\n// };\n//     // const { deckId } = useParams();\n// const [ cards, setCards ] = useState([]);\n// const history = useHistory();\n// useEffect(() => {\n//     async function loadDeck() {\n//         try {\n//             const responseFromAPI = await readDeck(deckId);\n//             setDecks(responseFromAPI);\n//             setCards(responseFromAPI.cards)\n//         }catch (error){\n//             console.log(\"Aborted Deck\")\n//         }\n//     }\n//     loadDeck();\n// }, [deckId])\n// const handleCardDelete = async ({ target }) => {\n//     const value = target.value;\n//     const result = window.confirm(`Delete this ${value} card? \\n \\nYou will not be able to recover it.`);\n//     if(result) {\n//         async function deleteThisCard() {\n//             try {\n//                 await deleteCard(value);\n//                 const valueFromAPI = await listCards(deckId);\n//                 setCards(valueFromAPI)\n//             }catch (error){\n//                 console.log(\"Aborted Card Delete\")\n//             }\n//         }\n//     deleteThisCard();\n//     }\n// };\n// return (\n//     <div>\n//         <nav aria-label=\"breadcrumb\">\n//             <ol className=\"breadcrumb\">\n//                 <li className=\"breadcrumb-item\">\n//                     <Link to={\"/\"} className=\"btn btn-link\">Go Home</Link>\n//                 </li>\n//                 <li className=\"breadcrumb-item active\" aria-current=\"page\">\n//                     {decks.name}\n//                 </li>\n//             </ol>\n//         </nav>\n//         <div className=\"card\">\n//         <div className=\"col\">\n//             <div className=\"row justify-content-between\">\n//                 <h2>{decks.name}</h2>\n//             </div>\n//             <div>\n//                 <p>{decks.description}</p>\n//             </div>\n//             <div className=\"container\">\n//                 <div className=\"row\">\n//                     <div className=\"col\">\n//                         <Link to={`/decks/${decks.id}/edit`} className=\"btn btn-secondary\">Edit</Link>\n//                         <Link to={`/decks/${decks.id}/study`} className=\"btn btn-primary\">Study</Link>\n//                         <Link to={`/decks/${decks.id}/cards/new`} className=\"btn btn-primary\">Add Cards</Link>\n//                     </div>\n//                     <div className=\"col\" style={{textAlign: \"right\"}}>\n//                     <button className=\"btn btn-danger\" onClick={handleDeckDelete}>Delete</button>\n//                     </div>\n//                 </div>\n//             </div>\n//         </div>\n//     </div>\n//     <h2>Cards</h2>\n//     <br/>\n//     {cards.map((card) => (\n//         <div>\n//             <div>{card.front}</div>\n//             <div>{card.back}</div>\n//         </div>\n//     ))}\n// </div>\n// );\n\nvar _c;\n\n$RefreshReg$(_c, \"Study\");","map":{"version":3,"sources":["/Users/mattairola/Project_Flashcards_Qualified_1/src/Deck/Study.js"],"names":["React","useState","useEffect","readDeck","Link","useParams","useHistory","Study","decks","deckId","history","studyDeck","setStudyDeck","studyCard","setStudyCard","cards","currentCard","cardMax","front","flip","loadStudyDeck","result","length","handleFlip","console","log","name","back"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { readDeck } from \"../utils/api\";\nimport { Link, useParams, useHistory } from \"react-router-dom\";\n\nconst Study = ({ decks }) => {\n    const { deckId } = useParams();\n    const history = useHistory();\n    const [ studyDeck, setStudyDeck ] = useState({})\n    const [ studyCard, setStudyCard ] = useState({\n        cards: [],\n        currentCard: 0,\n        cardMax: 0,\n        front: true,\n        flip: false\n    });\n\n    useEffect(() => {\n        async function loadStudyDeck() {\n            const result = await readDeck(deckId);\n            setStudyDeck(result);\n            setStudyCard({\n                cards: result.cards,\n                currentCard: 0,\n                cardMax: result.cards.length,\n                front: true,\n                flip: false\n            });\n        }\n        loadStudyDeck();\n    }, [deckId]);\n\n    const handleFlip = () => {\n        setStudyCard({\n            ...studyCard,\n            front: !studyCard.front,\n            flip: true,\n        });\n    }\n\n    console.log(studyDeck.front)\n\n    return (\n        <div>\n            <nav aria-label=\"breadcrumb\">\n                <ol className=\"breadcrumb\">\n                    <li className=\"breadcrumb-item\">\n                        <Link to={\"/\"} className=\"btn btn-link\">Go Home</Link>\n                    </li>\n                    <li className=\"breadcrumb-item\">\n                        <Link to={`/decks/${deckId}`} className=\"btn btn-link\">{studyDeck.name}</Link>\n                    </li>\n                    <li className=\"breadcrumb-item active\" aria-current=\"page\">\n                        Study\n                    </li>\n                </ol>\n            </nav>\n            <h4>Study: {studyDeck.name}</h4>\n                <div className=\"card\">\n                    <div className=\"card-body\">\n                        <h5>{`Card ${studyCard.currentCard + 1} of ${studyCard.cardMax}`}</h5>\n                        <p className=\"card-text\">\n                            {studyCard.front\n                            ? studyCard.cards[studyCard.currentCard].front\n                            : studyCard.cards[studyCard.currentCard].back}\n                        </p>\n                        <button className=\"btn btn-primary\" onClick={handleFlip}>\n                            Flip\n                        </button>\n                        <button className=\"btn btn-secondary\">\n                            Next\n                        </button>\n                    </div>\n                </div>\n        </div>\n    )\n}\n\nexport default Study;\n\n    \n// const handleDeckDelete = async () => {\n\n//     const result = window.confirm(`Delete this deck? \\n \\nYou will not be able to recover it.`);\n//     if(result) {\n//         async function deleteThisDeck() {\n//             try {\n//                 await deleteDeck(deckId);\n//                 history.push(\"/\");\n//             }catch (error){\n//                 console.log(\"Aborted Deck Delete\")\n//             }\n//         }\n//     deleteThisDeck();\n//     }\n// };\n//     // const { deckId } = useParams();\n    // const [ cards, setCards ] = useState([]);\n    // const history = useHistory();\n\n    // useEffect(() => {\n    //     async function loadDeck() {\n    //         try {\n    //             const responseFromAPI = await readDeck(deckId);\n    //             setDecks(responseFromAPI);\n    //             setCards(responseFromAPI.cards)\n    //         }catch (error){\n    //             console.log(\"Aborted Deck\")\n    //         }\n    //     }\n    //     loadDeck();\n    // }, [deckId])\n\n    // const handleCardDelete = async ({ target }) => {\n    //     const value = target.value;\n\n    //     const result = window.confirm(`Delete this ${value} card? \\n \\nYou will not be able to recover it.`);\n    //     if(result) {\n    //         async function deleteThisCard() {\n    //             try {\n    //                 await deleteCard(value);\n    //                 const valueFromAPI = await listCards(deckId);\n    //                 setCards(valueFromAPI)\n    //             }catch (error){\n    //                 console.log(\"Aborted Card Delete\")\n    //             }\n    //         }\n    //     deleteThisCard();\n    //     }\n    // };\n\n// return (\n//     <div>\n//         <nav aria-label=\"breadcrumb\">\n//             <ol className=\"breadcrumb\">\n//                 <li className=\"breadcrumb-item\">\n//                     <Link to={\"/\"} className=\"btn btn-link\">Go Home</Link>\n//                 </li>\n//                 <li className=\"breadcrumb-item active\" aria-current=\"page\">\n//                     {decks.name}\n//                 </li>\n//             </ol>\n//         </nav>\n//         <div className=\"card\">\n//         <div className=\"col\">\n//             <div className=\"row justify-content-between\">\n//                 <h2>{decks.name}</h2>\n//             </div>\n//             <div>\n//                 <p>{decks.description}</p>\n//             </div>\n//             <div className=\"container\">\n//                 <div className=\"row\">\n//                     <div className=\"col\">\n//                         <Link to={`/decks/${decks.id}/edit`} className=\"btn btn-secondary\">Edit</Link>\n//                         <Link to={`/decks/${decks.id}/study`} className=\"btn btn-primary\">Study</Link>\n//                         <Link to={`/decks/${decks.id}/cards/new`} className=\"btn btn-primary\">Add Cards</Link>\n//                     </div>\n//                     <div className=\"col\" style={{textAlign: \"right\"}}>\n//                     <button className=\"btn btn-danger\" onClick={handleDeckDelete}>Delete</button>\n//                     </div>\n//                 </div>\n//             </div>\n//         </div>\n//     </div>\n//     <h2>Cards</h2>\n//     <br/>\n//     {cards.map((card) => (\n//         <div>\n//             <div>{card.front}</div>\n//             <div>{card.back}</div>\n//         </div>\n//     ))}\n// </div>\n// );"]},"metadata":{},"sourceType":"module"}