{"ast":null,"code":"var _jsxFileName = \"/Users/mattairola/Project_Flashcards_Qualified_1/src/Decks/ViewDeck.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { Link, useParams, useHistory, useRouteMatch } from \"react-router-dom\";\nimport { readDeck, deleteDeck } from \"../utils/api/index\";\nimport CardList from \"./CardList\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction ViewDeck() {\n  _s();\n\n  const {\n    url\n  } = useRouteMatch();\n  const {\n    deckId\n  } = useParams();\n  const history = useHistory();\n  const [deck, setDeck] = useState({\n    id: 0,\n    name: \"\",\n    cards: []\n  });\n  useEffect(() => {\n    async function loadDecks() {\n      const result = await readDeck(deckId);\n      setDeck(result);\n    }\n\n    loadDecks();\n  }, [deckId]);\n\n  const deleteDeckHandler = deckId => {\n    if (window.confirm(`Delete this deck? \\n \\nYou will not be able to recover it.`)) {\n      deleteDeck(deckId);\n      history.push(\"/\");\n      history.go(0);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"nav\", {\n      \"aria-label\": \"breadcrumb\",\n      children: /*#__PURE__*/_jsxDEV(\"ol\", {\n        className: \"breadcrumb\",\n        children: [/*#__PURE__*/_jsxDEV(\"li\", {\n          class: \"breadcrumb-item\",\n          children: /*#__PURE__*/_jsxDEV(Link, {\n            to: \"/\",\n            children: \"Home\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          className: \"breadcrumb-item active\",\n          \"aria-current\": \"page\",\n          children: deck.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n      children: deck.name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n      children: deck.description\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"col\",\n      children: [/*#__PURE__*/_jsxDEV(Link, {\n        to: `${url}/edit`,\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          className: \"btn btn-info button\",\n          children: \"Edit Deck\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Link, {\n        to: `${url}/study`,\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          className: \"btn btn-info button\",\n          children: \"Study\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Link, {\n        to: `${url}/cards/new`,\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          className: \"btn btn-info button\",\n          children: \"Add Card\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: () => deleteDeckHandler(deck.id),\n        className: \"btn btn-danger button\",\n        children: \"Delete Deck\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n      children: \"Cards\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(CardList, {\n      deck: deck\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 11\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 9\n  }, this);\n}\n\n_s(ViewDeck, \"Ijpij3U/4r6v+lGAOri0SRCnO4Y=\", false, function () {\n  return [useRouteMatch, useParams, useHistory];\n});\n\n_c = ViewDeck;\nexport default ViewDeck;\n\nvar _c;\n\n$RefreshReg$(_c, \"ViewDeck\");","map":{"version":3,"sources":["/Users/mattairola/Project_Flashcards_Qualified_1/src/Decks/ViewDeck.js"],"names":["React","useState","useEffect","Link","useParams","useHistory","useRouteMatch","readDeck","deleteDeck","CardList","ViewDeck","url","deckId","history","deck","setDeck","id","name","cards","loadDecks","result","deleteDeckHandler","window","confirm","push","go","description"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { Link, useParams, useHistory, useRouteMatch } from \"react-router-dom\";\nimport { readDeck, deleteDeck } from \"../utils/api/index\"\nimport CardList from \"./CardList\";\n \nfunction ViewDeck() {\n    const { url } = useRouteMatch();\n    const { deckId } = useParams();\n    const history = useHistory();\n    const [ deck, setDeck ] = useState({\n        id: 0,\n        name: \"\",\n        cards: []\n    });\n\n    useEffect(() => {\n        async function loadDecks() {\n            const result = await readDeck(deckId);\n            setDeck(result);\n        }\n        loadDecks();\n    }, [deckId]);\n\n    const deleteDeckHandler = (deckId) => {\n        if(window.confirm(`Delete this deck? \\n \\nYou will not be able to recover it.`)){\n            deleteDeck(deckId);\n            history.push(\"/\");\n            history.go(0);\n        }\n    };\n\n    return (\n        <div className=\"container\">\n            <nav aria-label=\"breadcrumb\">\n                <ol className=\"breadcrumb\">\n                    <li class=\"breadcrumb-item\">\n                        <Link to=\"/\">\n                            Home\n                        </Link>\n                    </li>\n                    <li className=\"breadcrumb-item active\" aria-current=\"page\">\n                        {deck.name}\n                    </li>\n                </ol>\n            </nav>\n        <h4>{deck.name}</h4>\n        <h4>{deck.description}</h4>\n            <div className=\"col\">\n                <Link to={`${url}/edit`}>\n                    <button type=\"button\" className=\"btn btn-info button\">\n                        Edit Deck\n                    </button>\n                </Link>\n                <Link to={`${url}/study`}>\n                    <button type=\"button\" className=\"btn btn-info button\">\n                        Study\n                    </button>\n                </Link>\n                <Link to={`${url}/cards/new`}>\n                    <button type=\"button\" className=\"btn btn-info button\">\n                        Add Card\n                    </button>\n                </Link>\n                    <button\n                        type=\"button\"\n                        onClick={() => deleteDeckHandler(deck.id)}\n                        className=\"btn btn-danger button\"\n                    >\n                    Delete Deck\n                    </button>\n            </div>       \n          <h4>Cards</h4>\n          <CardList deck={deck} />\n        </div>\n    )\n}\n\nexport default ViewDeck;"]},"metadata":{},"sourceType":"module"}