{"ast":null,"code":"var _jsxFileName = \"/Users/mattairola/Project_Flashcards_Qualified_1/src/Deck/ViewDeck.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { Link, useParams } from \"react-router-dom\";\nimport { readDeck } from \"../utils/api/index\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst NewDeck = () => {\n  _s();\n\n  const {\n    deckId\n  } = useParams();\n  const history = useHistory();\n  const [deck, setDeck] = useState({\n    id: 0,\n    name: \"\",\n    cards: []\n  });\n  useEffect(() => {\n    async function loadDeck() {\n      try {\n        const responseFromAPI = await readDeck(deckId);\n        setDecks(responseFromAPI);\n        setCards(responseFromAPI.cards);\n      } catch (error) {\n        console.log(\"Aborted Deck\");\n      }\n    }\n\n    loadDeck();\n  }, [deckId]);\n  return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"ViewDECK\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 9\n  }, this);\n};\n\n_s(NewDeck, \"4TsYeW8REFAd8MByVXZkBCuPKMc=\", true, function () {\n  return [useParams];\n});\n\n_c = NewDeck;\nexport default NewDeck;\n\nvar _c;\n\n$RefreshReg$(_c, \"NewDeck\");","map":{"version":3,"sources":["/Users/mattairola/Project_Flashcards_Qualified_1/src/Deck/ViewDeck.js"],"names":["React","useState","useEffect","Link","useParams","readDeck","NewDeck","deckId","history","useHistory","deck","setDeck","id","name","cards","loadDeck","responseFromAPI","setDecks","setCards","error","console","log"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,IAAT,EAAeC,SAAf,QAAgC,kBAAhC;AACA,SAASC,QAAT,QAAyB,oBAAzB;;;AAEA,MAAMC,OAAO,GAAG,MAAM;AAAA;;AAClB,QAAM;AAAEC,IAAAA;AAAF,MAAaH,SAAS,EAA5B;AACA,QAAMI,OAAO,GAAGC,UAAU,EAA1B;AACA,QAAM,CAAEC,IAAF,EAAQC,OAAR,IAAoBV,QAAQ,CAAC;AAC/BW,IAAAA,EAAE,EAAE,CAD2B;AAE/BC,IAAAA,IAAI,EAAE,EAFyB;AAG/BC,IAAAA,KAAK,EAAE;AAHwB,GAAD,CAAlC;AAMAZ,EAAAA,SAAS,CAAC,MAAM;AACZ,mBAAea,QAAf,GAA0B;AACtB,UAAI;AACA,cAAMC,eAAe,GAAG,MAAMX,QAAQ,CAACE,MAAD,CAAtC;AACAU,QAAAA,QAAQ,CAACD,eAAD,CAAR;AACAE,QAAAA,QAAQ,CAACF,eAAe,CAACF,KAAjB,CAAR;AACH,OAJD,CAIC,OAAOK,KAAP,EAAa;AACVC,QAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ;AACH;AACJ;;AACDN,IAAAA,QAAQ;AACX,GAXQ,EAWN,CAACR,MAAD,CAXM,CAAT;AAeA,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAGH,CA3BD;;GAAMD,O;UACiBF,S;;;KADjBE,O;AA6BN,eAAeA,OAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { Link, useParams } from \"react-router-dom\";\nimport { readDeck } from \"../utils/api/index\"\n \nconst NewDeck = () => {\n    const { deckId } = useParams();\n    const history = useHistory();\n    const [ deck, setDeck ] = useState({\n        id: 0,\n        name: \"\",\n        cards: []\n    });\n\n    useEffect(() => {\n        async function loadDeck() {\n            try {\n                const responseFromAPI = await readDeck(deckId);\n                setDecks(responseFromAPI);\n                setCards(responseFromAPI.cards)\n            }catch (error){\n                console.log(\"Aborted Deck\")\n            }\n        }\n        loadDeck();\n    }, [deckId])\n\n\n\n    return (\n        <p>ViewDECK</p>\n    )\n}\n\nexport default NewDeck;"]},"metadata":{},"sourceType":"module"}