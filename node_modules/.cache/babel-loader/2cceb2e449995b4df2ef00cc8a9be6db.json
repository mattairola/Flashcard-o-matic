{"ast":null,"code":"var _jsxFileName = \"/Users/mattairola/Project_Flashcards_Qualified_1/src/Layout/Study.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { readDeck } from \"../utils/api\";\nimport { Link, useParams, useHistory } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Study({\n  decks\n}) {\n  _s();\n\n  const {\n    deckId\n  } = useParams();\n  const history = useHistory();\n  const [deck, setDeck] = useState({});\n  const [studyDeck, setStudyDeck] = useState({\n    cards: [],\n    currentCard: 0,\n    cardLimit: 0,\n    front: true,\n    flipped: false\n  });\n  useEffect(() => {\n    async function loadStudyDeck() {\n      const result = await readDeck(deckId);\n      setDeck(result);\n      setStudyDeck({\n        cards: result.cards,\n        currentCard: 0,\n        cardLimit: result.cards.length,\n        front: true,\n        flipped: false\n      });\n    }\n\n    loadStudyDeck();\n  }, [deckId]);\n\n  function flipCard() {\n    setStudyDeck({ ...studyDeck,\n      front: !studyDeck.front,\n      flipped: true\n    });\n  }\n\n  function numberOfCardsLeft() {\n    return `${studyDeck.currentCard + 1} of ${studyDeck.cardLimit}`;\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"nav\", {\n      \"aria-label\": \"breadcrumb\",\n      children: /*#__PURE__*/_jsxDEV(\"ol\", {\n        className: \"breadcrumb\",\n        children: [/*#__PURE__*/_jsxDEV(\"li\", {\n          className: \"breadcrumb-item\",\n          children: /*#__PURE__*/_jsxDEV(Link, {\n            to: \"/\",\n            className: \"btn btn-link\",\n            children: \"Go Home\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          className: \"breadcrumb-item\",\n          children: /*#__PURE__*/_jsxDEV(Link, {\n            to: `/decks/${deckId}`,\n            className: \"btn btn-link\",\n            children: deck.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          className: \"breadcrumb-item active\",\n          \"aria-current\": \"page\",\n          children: \"Study\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 15\n    }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n      children: [\"Study: \", deck.name]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card-body\",\n        children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n          children: [\"Card \", numberOfCardsLeft]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"card-text\",\n          children: \"hello\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn btn-primary\",\n          children: \"Flip\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Study, \"VuLiDlOd9nR/o2RIXb5t3WZg1dI=\", false, function () {\n  return [useParams, useHistory];\n});\n\n_c = Study;\n\nvar _c;\n\n$RefreshReg$(_c, \"Study\");","map":{"version":3,"sources":["/Users/mattairola/Project_Flashcards_Qualified_1/src/Layout/Study.js"],"names":["React","useState","useEffect","readDeck","Link","useParams","useHistory","Study","decks","deckId","history","deck","setDeck","studyDeck","setStudyDeck","cards","currentCard","cardLimit","front","flipped","loadStudyDeck","result","length","flipCard","numberOfCardsLeft","name"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { readDeck } from \"../utils/api\";\nimport { Link, useParams, useHistory } from \"react-router-dom\";\n\nexport default function Study({ decks }) {\n    const { deckId } = useParams();\n    const history = useHistory();\n    const [ deck, setDeck ] = useState({});\n    const [ studyDeck, setStudyDeck ] = useState({\n        cards: [],\n        currentCard: 0,\n        cardLimit: 0,\n        front: true,\n        flipped: false,\n    });\n\n    useEffect(() => {\n        async function loadStudyDeck() {\n                const result = await readDeck(deckId);\n                setDeck(result);\n                setStudyDeck({\n                    cards: result.cards,\n                    currentCard: 0,\n                    cardLimit: result.cards.length,\n                    front: true,\n                    flipped: false,\n                });\n        }\n        loadStudyDeck();\n    }, [deckId]);\n\n    function flipCard() {\n        setStudyDeck({\n            ...studyDeck,\n            front: !studyDeck.front,\n            flipped: true,\n        })\n    }\n\n    function numberOfCardsLeft() {\n        return `${studyDeck.currentCard + 1} of ${studyDeck.cardLimit}`\n    }\n   \n    return (\n        <div>\n              <nav aria-label=\"breadcrumb\">\n                    <ol className=\"breadcrumb\">\n                        <li className=\"breadcrumb-item\">\n                            <Link to={\"/\"} className=\"btn btn-link\">Go Home</Link>\n                        </li>\n                        <li className=\"breadcrumb-item\">\n                            <Link to={`/decks/${deckId}`} className=\"btn btn-link\">{deck.name}</Link>\n                        </li>\n                        <li className=\"breadcrumb-item active\" aria-current=\"page\">\n                            Study\n                        </li>\n                    </ol>\n                </nav>\n                <h4>Study: {deck.name}</h4>\n                <div className=\"card\">\n                    <div className=\"card-body\">\n                        <h5>Card {numberOfCardsLeft}</h5>\n                        <p className=\"card-text\">hello</p>\n                        <button className=\"btn btn-primary\">\n                            Flip\n                        </button>\n                        \n                    </div>\n                </div>\n        </div>\n    )\n}"]},"metadata":{},"sourceType":"module"}