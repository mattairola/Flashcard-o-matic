{"ast":null,"code":"var _jsxFileName = \"/Users/mattairola/Project_Flashcards_Qualified_1/src/Decks/AddCard.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { Link, useParams, useHistory } from \"react-router-dom\";\nimport { createCard, readDeck } from \"../utils/api/index\";\nimport CardForm from \"./CardForm\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction AddCard() {\n  _s();\n\n  const {\n    deckId\n  } = useParams();\n  const history = useHistory();\n  const [deck, setDeck] = useState({});\n  const [card, setCard] = useState({\n    front: \"\",\n    back: \"\",\n    deckId\n  });\n  useEffect(() => {\n    async function loadDeck() {\n      const result = await readDeck(deckId);\n      setDeck(result);\n    }\n\n    loadDeck();\n  }, [deckId]);\n\n  const cardFrontHandler = event => {\n    setCard({ ...card,\n      front: event.target.value\n    });\n  };\n\n  const cardBackHandler = event => {\n    setCard({ ...card,\n      back: event.target.value\n    });\n  };\n\n  const submitHandler = event => {\n    event.preventDefault();\n\n    async function updateCardData() {\n      await createCard(deck.id, card).then(history.push(`/decks/${deckId}`));\n      setCard({ ...card\n      });\n    }\n\n    updateCardData();\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"nav\", {\n      \"aria-label\": \"breadcrumb\",\n      children: /*#__PURE__*/_jsxDEV(\"ol\", {\n        className: \"breadcrumb\",\n        children: [/*#__PURE__*/_jsxDEV(\"li\", {\n          className: \"breadcrumb-item\",\n          children: /*#__PURE__*/_jsxDEV(Link, {\n            to: \"/\",\n            className: \"btn btn-link\",\n            children: \"Go Home\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          className: \"breadcrumb-item active\",\n          \"aria-current\": \"page\",\n          children: \"Add Card\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n      children: deck.name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(CardForm, {\n      cardFrontHandler: cardFrontHandler,\n      cardBackHandler: cardBackHandler,\n      submitHandler: submitHandler,\n      card: card\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 9\n  }, this);\n}\n\n_s(AddCard, \"InUWZ1XByh33i0dsCSrKSt+liO8=\", false, function () {\n  return [useParams, useHistory];\n});\n\n_c = AddCard;\nexport default AddCard;\n\nvar _c;\n\n$RefreshReg$(_c, \"AddCard\");","map":{"version":3,"sources":["/Users/mattairola/Project_Flashcards_Qualified_1/src/Decks/AddCard.js"],"names":["React","useEffect","useState","Link","useParams","useHistory","createCard","readDeck","CardForm","AddCard","deckId","history","deck","setDeck","card","setCard","front","back","loadDeck","result","cardFrontHandler","event","target","value","cardBackHandler","submitHandler","preventDefault","updateCardData","id","then","push","name"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,IAAT,EAAeC,SAAf,EAA0BC,UAA1B,QAA4C,kBAA5C;AACA,SAASC,UAAT,EAAqBC,QAArB,QAAqC,oBAArC;AACA,OAAOC,QAAP,MAAqB,YAArB;;;AAEA,SAASC,OAAT,GAAmB;AAAA;;AACf,QAAM;AAAEC,IAAAA;AAAF,MAAaN,SAAS,EAA5B;AACA,QAAMO,OAAO,GAAGN,UAAU,EAA1B;AACA,QAAM,CAAEO,IAAF,EAAQC,OAAR,IAAoBX,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAAEY,IAAF,EAAQC,OAAR,IAAoBb,QAAQ,CAAC;AAC/Bc,IAAAA,KAAK,EAAE,EADwB;AAE/BC,IAAAA,IAAI,EAAE,EAFyB;AAG/BP,IAAAA;AAH+B,GAAD,CAAlC;AAMAT,EAAAA,SAAS,CAAC,MAAM;AACZ,mBAAeiB,QAAf,GAA0B;AACtB,YAAMC,MAAM,GAAG,MAAMZ,QAAQ,CAACG,MAAD,CAA7B;AACAG,MAAAA,OAAO,CAACM,MAAD,CAAP;AACH;;AACDD,IAAAA,QAAQ;AACX,GANQ,EAMN,CAACR,MAAD,CANM,CAAT;;AAQA,QAAMU,gBAAgB,GAAIC,KAAD,IAAW;AAChCN,IAAAA,OAAO,CAAC,EAAE,GAAGD,IAAL;AAAWE,MAAAA,KAAK,EAAEK,KAAK,CAACC,MAAN,CAAaC;AAA/B,KAAD,CAAP;AACH,GAFD;;AAIA,QAAMC,eAAe,GAAIH,KAAD,IAAW;AAC/BN,IAAAA,OAAO,CAAC,EAAE,GAAGD,IAAL;AAAWG,MAAAA,IAAI,EAAEI,KAAK,CAACC,MAAN,CAAaC;AAA9B,KAAD,CAAP;AACH,GAFD;;AAIA,QAAME,aAAa,GAAIJ,KAAD,IAAW;AAC7BA,IAAAA,KAAK,CAACK,cAAN;;AACA,mBAAeC,cAAf,GAAgC;AAC5B,YAAMrB,UAAU,CAACM,IAAI,CAACgB,EAAN,EAAUd,IAAV,CAAV,CAA0Be,IAA1B,CAA+BlB,OAAO,CAACmB,IAAR,CAAc,UAASpB,MAAO,EAA9B,CAA/B,CAAN;AACAK,MAAAA,OAAO,CAAC,EAAE,GAAGD;AAAL,OAAD,CAAP;AACC;;AACLa,IAAAA,cAAc;AACjB,GAPD;;AASA,sBACI;AAAA,4BACQ;AAAK,oBAAW,YAAhB;AAAA,6BACI;AAAI,QAAA,SAAS,EAAC,YAAd;AAAA,gCACI;AAAI,UAAA,SAAS,EAAC,iBAAd;AAAA,iCACI,QAAC,IAAD;AAAM,YAAA,EAAE,EAAE,GAAV;AAAe,YAAA,SAAS,EAAC,cAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,gBADJ,eAII;AAAI,UAAA,SAAS,EAAC,wBAAd;AAAuC,0BAAa,MAApD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAJJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YADR,eAYI;AAAA,gBAAKf,IAAI,CAACmB;AAAV;AAAA;AAAA;AAAA;AAAA,YAZJ,eAaQ,QAAC,QAAD;AACI,MAAA,gBAAgB,EAAEX,gBADtB;AAEI,MAAA,eAAe,EAAEI,eAFrB;AAGI,MAAA,aAAa,EAAEC,aAHnB;AAII,MAAA,IAAI,EAAEX;AAJV;AAAA;AAAA;AAAA;AAAA,YAbR;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAsBH;;GAzDQL,O;UACcL,S,EACHC,U;;;KAFXI,O;AA2DT,eAAeA,OAAf","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { Link, useParams, useHistory } from \"react-router-dom\";\nimport { createCard, readDeck } from \"../utils/api/index\"\nimport CardForm from \"./CardForm\";\n\nfunction AddCard() {\n    const { deckId } = useParams();\n    const history = useHistory();\n    const [ deck, setDeck ] = useState({});\n    const [ card, setCard ] = useState({\n        front: \"\",\n        back: \"\",\n        deckId,\n    });\n\n    useEffect(() => {\n        async function loadDeck() {\n            const result = await readDeck(deckId);\n            setDeck(result);     \n        }\n        loadDeck();\n    }, [deckId]);\n\n    const cardFrontHandler = (event) => {\n        setCard({ ...card, front: event.target.value });\n    }\n\n    const cardBackHandler = (event) => {\n        setCard({ ...card, back: event.target.value });\n    }\n\n    const submitHandler = (event) => {\n        event.preventDefault();\n        async function updateCardData() {\n            await createCard(deck.id, card).then(history.push(`/decks/${deckId}`));\n            setCard({ ...card });\n            }\n        updateCardData();\n    };\n\n    return (\n        <div>\n                <nav aria-label=\"breadcrumb\">\n                    <ol className=\"breadcrumb\">\n                        <li className=\"breadcrumb-item\">\n                            <Link to={\"/\"} className=\"btn btn-link\">Go Home</Link>\n                        </li>\n                        <li className=\"breadcrumb-item active\" aria-current=\"page\">\n                            Add Card\n                        </li>\n                    </ol>\n                </nav>\n        \n            <h4>{deck.name}</h4>\n                <CardForm \n                    cardFrontHandler={cardFrontHandler}\n                    cardBackHandler={cardBackHandler}\n                    submitHandler={submitHandler}\n                    card={card}\n                />\n        </div>\n    )\n}\n\nexport default AddCard;"]},"metadata":{},"sourceType":"module"}